#suite s21_sprintf_tests_X

#test test_1
unsigned int a = 77;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%X", a), sprintf(resorig, "%X", a));
ck_assert_pstr_eq(res, resorig);

#test test_2
unsigned int a = 77;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%#X", a), sprintf(resorig, "%#X", a));
ck_assert_pstr_eq(res, resorig);

#test test_3
unsigned int a = UINT_MAX;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%#10X", a), sprintf(resorig, "%#10X", a));
ck_assert_pstr_eq(res, resorig);

#test test_4
unsigned int a = 77;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%#-10X", a), sprintf(resorig, "%#-10X", a));
ck_assert_pstr_eq(res, resorig);

#test test_5
unsigned int a = UINT_MAX;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%0#10X", a), sprintf(resorig, "%0#10X", a));
ck_assert_pstr_eq(res, resorig);

#test test_6
unsigned int a = 77;
unsigned int b = 7777;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%0#10X", b - a), sprintf(resorig, "%0#10X", b - a));
ck_assert_pstr_eq(res, resorig);

#test test_7
unsigned int b = 7777;
unsigned int g = 777777;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%010X", b + g), sprintf(resorig, "%010X", b + g));
ck_assert_pstr_eq(res, resorig);

#test test_8
unsigned int a = 77;
unsigned int b = 7777;
unsigned int g = 777777;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%015X", b + g - a), sprintf(resorig, "%015X", b + g - a));
ck_assert_pstr_eq(res, resorig);

#test test_9
unsigned int a = 77;
unsigned int b = 7777;
unsigned int g = 777777;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%3X", b + g - a), sprintf(resorig, "%3X", b + g - a));
ck_assert_pstr_eq(res, resorig);

#test test_10
unsigned int a = 77;
unsigned int b = 7777;
unsigned int g = 777777;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%X - %x - %X", a, b, g), sprintf(resorig, "%X - %x - %X", a, b, g));
ck_assert_pstr_eq(res, resorig);

#test test_11
unsigned int a = 77;
unsigned int b = 7777;
unsigned int g = 777777;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%.15X - %X - %x", a, b, g), sprintf(resorig, "%X - %X - %x", a, b, g));
ck_assert_pstr_eq(res, resorig);

#test test_12
unsigned int a = 77;
unsigned int b = 7777;
unsigned int g = 777777;
unsigned int c = 0;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%.3X %.0X", b + g - a, c * c), sprintf(resorig, "%.3X %.0X", b + g - a, c * c));
ck_assert_pstr_eq(res, resorig);

#test test_13
unsigned int a = 77;
long int h = 7;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%hX %-.100lX", a, h), sprintf(resorig, "%hX %-.100lX", a, h));
ck_assert_pstr_eq(res, resorig);

#test test_14
unsigned int a = 77;
unsigned int b = 7777;
unsigned int g = 777777;
short int e = 777;
long int h = 7;
сhar res[200];
char resorig[200];
ck_assert_int_eq(s21_sprintf(res, "%*X%*.*X%.*x%0hX %-.100lx", 13, a, 10, 12, b, 0, g, e, h), sprintf(resorig, "%*X%*.*X%.*x%0hX %-.100lx", 13, a, 10, 12, b, 0, g, e, h));
ck_assert_pstr_eq(res, resorig);
